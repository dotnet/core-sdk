<Project>

  <PropertyGroup>
    <RpmConfigJsonName>rpm_config.json</RpmConfigJsonName>
    <TemplatesDir>$(MSBuildThisFileDirectory)packaging/rpm/templates</TemplatesDir>
    <ScriptsDir>$(MSBuildThisFileDirectory)packaging/rpm/scripts</ScriptsDir>
    <AfterInstallHostScriptName>after_install_host.sh</AfterInstallHostScriptName>
  </PropertyGroup>


  <Target Name="GenerateRpms"
          DependsOnTargets="GetCurrentRuntimeInformation;
                            GenerateRpmsInner" />

  <Target Name="GenerateRpmsInner"
          DependsOnTargets="TestFPMTool;BuildRpms;TestSdkRpm"
          Condition=" '$(IsRPMBasedDistro)' == 'True' "
          Outputs="@(GeneratedInstallers)"/>

  <Target Name="BuildRpms"
          DependsOnTargets="GenerateSdkRpm"
          Condition=" '$(IsRPMBasedDistro)' == 'True' and '$(FPMPresent)' == 'True' "/>

  <Target Name="GenerateSdkRpm"
          DependsOnTargets="SetupRpmProps">

    <RemoveDir Condition="Exists('$(RpmIntermediatesDir)')" Directories="$(RpmIntermediatesDir)"/>
    <MakeDir Directories="$(RpmIntermediatesDir)"/>

    <!-- Create empty rpm layout -->
    <RemoveDir Condition="Exists('$(RpmLayoutDirectory)')" Directories="$(RpmLayoutDirectory)"/>
    <MakeDir Directories="$(RpmLayoutDirectory)"/>
    <MakeDir Directories="$(RpmLayoutPackageRoot)"/>
    <MakeDir Directories="$(RpmLayoutSDK)"/>
    <MakeDir Directories="$(RpmLayoutDocs)"/>
    <MakeDir Directories="$(RpmLayoutTemplates)"/>
    <MakeDir Directories="$(RpmLayoutScripts)"/>

    <!-- Copy files to rpm layout -->
    <ItemGroup>
      <SDKFiles Include="$(InputRoot)/**/*"/>
      <SDKManpages Include="$(ManPagesDir)/**/*"/>
      <SDKTemplatesFiles Include="$(TemplatesDir)/**/*"/>
      <SDKScriptsFiles Include="$(ScriptsDir)/after_remove_host.sh"/>
    </ItemGroup>

    <Copy SourceFiles="@(SDKFiles)"
          DestinationFiles="@(SDKFiles->'$(RpmLayoutSDK)/%(RecursiveDir)%(Filename)%(Extension)')"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False"/>

    <Copy SourceFiles="@(SDKManpages)"
          DestinationFiles="@(SDKManpages->'$(RpmLayoutDocs)/%(RecursiveDir)%(Filename)%(Extension)')"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False"/>

    <Copy SourceFiles="@(SDKTemplatesFiles)"
          DestinationFiles="@(SDKTemplatesFiles->'$(RpmLayoutTemplates)/%(RecursiveDir)%(Filename)%(Extension)')"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False"/>

    <Copy SourceFiles="@(SDKScriptsFiles)"
          DestinationFiles="@(SDKScriptsFiles->'$(RpmLayoutScripts)/%(RecursiveDir)%(Filename)%(Extension)')"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False"/>

    <!-- Replace config json variables -->
    <ItemGroup>
      <SDKTokenValue Include="%SHARED_HOST_RPM_VERSION%">
        <ReplacementString>$(MicrosoftNETCoreAppMajorMinorPatchVersion)</ReplacementString>
      </SDKTokenValue>
      <SDKTokenValue Include="%ASPNETCORE_SHAREDFX_RPM_PACKAGE_VERSION%">
        <ReplacementString>$(AspNetCoreMajorMinorPatchVersion)</ReplacementString>
      </SDKTokenValue>
      <SDKTokenValue Include="%SHARED_HOST_RPM_NAME%">
        <ReplacementString>$(SharedFxRpmPackageName)</ReplacementString>
      </SDKTokenValue>
      <SDKTokenValue Include="%SHARED_HOST_TARGETING_PACK_RPM_NAME%">
        <ReplacementString>$(SharedFxTargetingPackRpmPackageName)</ReplacementString>
      </SDKTokenValue>
      <SDKTokenValue Include="%ASPNETCORE_SHAREDFX_RPM_PACKAGE_NAME%">
        <ReplacementString>$(AspNetCoreSharedFxRpmPackageName)</ReplacementString>
      </SDKTokenValue>
      <SDKTokenValue Include="%ASPNETCORE_SHAREDFX_TARGETING_PACK_RPM_PACKAGE_NAME%">
        <ReplacementString>$(AspNetCoreSharedFxTargetingPackRpmPackageName)</ReplacementString>
      </SDKTokenValue>
      <SDKTokenValue Include="%SDK_NUGET_VERSION%">
        <ReplacementString>$(SdkVersion)</ReplacementString>
      </SDKTokenValue>
      <SDKTokenValue Include="%CLI_SDK_BRAND_NAME%">
        <ReplacementString>$(SdkBrandName)</ReplacementString>
      </SDKTokenValue>
      <SDKTokenValue Include="%SDK_RPM_PACKAGE_NAME%">
        <ReplacementString>$(SdkRpmPackageName)</ReplacementString>
      </SDKTokenValue>

      <AfterInstallHostTokenValue  Include="%SDK_VERSION%">
        <ReplacementString>$(SdkVersion)</ReplacementString>
      </AfterInstallHostTokenValue>
    </ItemGroup>

    <ItemGroup>
      <TestSdkRpmTaskEnvironmentVariables Include="PATH=$(RpmInstalledDirectory)$(PathListSeparator)$(PATH)" />
      <TestSdkRpmTaskEnvironmentVariables Include="TEST_ARTIFACTS=$(TestArtifactsDir)" />
      <TestSdkRpmTaskEnvironmentVariables Include="TEST_PACKAGES=$(TestPackagesDir)" />
      <TestSdkRpmTaskEnvironmentVariables Include="PreviousStageProps=$(NextStagePropsPath)" />

      <!-- Consumed By Publish -->
      <!--<GeneratedInstallers Include="$(SdkRPMInstallerFile)" />-->
    </ItemGroup>

    <ReplaceFileContents InputFiles="$(AfterInstallHostScriptTemplateFile)"
                         DestinationFiles="$(AfterInstallHostScriptDestinationFile)"
                         ReplacementItems="@(AfterInstallHostTokenValue)"/>

    <Chmod
        Glob="$(AfterInstallHostScriptDestinationFile)"
        Mode="ugo+x" />

    <ReplaceFileContents InputFiles="$(ConfigJsonFile)"
                         DestinationFiles="$(RpmLayoutDirectory)$(RpmConfigJsonName)"
                         ReplacementItems="@(SDKTokenValue)"/>

    <!-- Call the task to build the pre-reqs (parameters, copyright, changelog) for calling the FPM tool -->
    <BuildFPMToolPreReqs InputDir="$(RpmLayoutDirectory)"
                         OutputDir="$(RpmIntermediatesDir)"
                         PackageVersion="$(RpmPackageVersion)"
                         ConfigJsonFile="$(RpmLayoutDirectory)$(RpmConfigJsonName)">
      <Output TaskParameter="FPMParameters" PropertyName="FPMCmdParameters"/>
    </BuildFPMToolPreReqs>

    <!-- Build the RPM package by calling the FPM tool and passing the parameter list -->
    <Exec Command="fpm $(FPMCmdParameters)" WorkingDirectory="$(RpmIntermediatesDir)"/>

    <!-- Copy package to output -->
    <ItemGroup>
      <GeneratedRpmFiles Remove="@(GeneratedRpmFiles)"/>
      <GeneratedRpmFiles Include="$(RpmIntermediatesDir)/*.rpm"/>
    </ItemGroup>

    <Error Text="@(GeneratedRpmFiles->Count()) .rpm files generated." Condition="'@(GeneratedRpmFiles->Count())' != 1"/>

    <Copy SourceFiles="@(GeneratedRpmFiles)"
          DestinationFiles="$(RpmFile)"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False"/>

  </Target>

  <Target Name="SetupRpmProps"
          DependsOnTargets="SetSdkVersionInfo;CalculateLinuxNativeInstallerDependencyVersions;GetCurrentRuntimeInformation;SetupFileExtensions">
    <PropertyGroup>
      <SdkRpmPackageVersion>$(MajorMinorVersion)</SdkRpmPackageVersion>
      <SdkRpmPackageName>$(ArtifactNameCombinedHostHostFxrFrameworkSdk)-$(SdkRpmPackageVersion)</SdkRpmPackageName>
      
      <RuntimeDepsPackageVersion>$(MicrosoftNETCoreAppPackageVersion)</RuntimeDepsPackageVersion>
      <RuntimeDepsPackageFileName>dotnet-runtime-deps-$(RuntimeDepsPackageVersion)</RuntimeDepsPackageFileName>
      <RpmPackageVersion>$(SdkVersion)</RpmPackageVersion>
      <InputRoot>$(RedistLayoutPath)sdk/</InputRoot>
      <SdkRPMInstallerFile>$(ArtifactsShippingPackagesDir)$(DistroSpecificArtifactNameWithVersionCombinedHostHostFxrFrameworkSdk)$(InstallerExtension)</SdkRPMInstallerFile>
      <RpmFile>$(SdkRPMInstallerFile)</RpmFile>
      <!-- Need to acquire manpage files from CLI repo: https://github.com/dotnet/cli/issues/10266 -->
      <ManPagesDir>$(RepoRoot)/Documentation/manpages</ManPagesDir>
      <ConfigJsonFile>$(MSBuildThisFileDirectory)packaging/rpm/dotnet-config.json</ConfigJsonFile>
      <RpmIntermediatesDir>$(IntermediateOutputPath)$(SdkRpmPackageName)/$(RpmPackageVersion)</RpmIntermediatesDir>
      <RpmTestResultsXmlFile>$(RpmIntermediatesDir)/debian-testResults.xml</RpmTestResultsXmlFile>
      <RpmInstalledDirectory>/usr/share/dotnet</RpmInstalledDirectory>
    </PropertyGroup>

    <PropertyGroup>
      <RpmLayoutDirectory>$(RpmIntermediatesDir)/RpmLayoutDirectory/</RpmLayoutDirectory>
      <RpmLayoutPackageRoot>$(RpmLayoutDirectory)package_root</RpmLayoutPackageRoot>
      <RpmLayoutSDK>$(RpmLayoutPackageRoot)/sdk</RpmLayoutSDK>
      <RpmLayoutDocs>$(RpmLayoutDirectory)docs</RpmLayoutDocs>                <!-- Man Pages -->
      <RpmLayoutTemplates>$(RpmLayoutDirectory)templates</RpmLayoutTemplates> <!-- Copyright, Changelog -->
      <RpmLayoutScripts>$(RpmLayoutDirectory)scripts</RpmLayoutScripts>
    </PropertyGroup>

    <PropertyGroup>
      <SharedFxRpmPackageVersion>$(MicrosoftNETCoreAppMajorMinorVersion)</SharedFxRpmPackageVersion>
      <SharedFxRpmPackageFileVersion>$(MicrosoftNETCoreAppPackageVersion)</SharedFxRpmPackageFileVersion>
      <SharedFxRpmPackageName>dotnet-runtime-$(SharedFxRpmPackageVersion)</SharedFxRpmPackageName>
      <SharedFxRpmPackageName>$(SharedFxRpmPackageName.ToLower())</SharedFxRpmPackageName>
      <SharedFxRpmPackageFileName>dotnet-runtime-$(SharedFxRpmPackageFileVersion)</SharedFxRpmPackageFileName>
      <SharedFxRpmPackageFileName>$(SharedFxRpmPackageFileName.ToLower())</SharedFxRpmPackageFileName>
      <SharedFxTargetingPackRpmPackageName>dotnet-targeting-pack-$(SharedFxRpmPackageVersion)</SharedFxTargetingPackRpmPackageName>
      <SharedFxTargetingPackRpmPackageName>$(SharedFxTargetingPackRpmPackageName.ToLower())</SharedFxTargetingPackRpmPackageName>
      <SharedFxTargetingPackRpmPackageFileName>dotnet-targeting-pack-$(SharedFxRpmPackageFileVersion)</SharedFxTargetingPackRpmPackageFileName>
      <SharedFxTargetingPackRpmPackageFileName>$(SharedFxTargetingPackRpmPackageFileName.ToLower())</SharedFxTargetingPackRpmPackageFileName>
      <HostFxrRpmPackageVersion>$(HostFxrVersion)</HostFxrRpmPackageVersion>
      <HostFxrRpmPackageName>dotnet-hostfxr-$(HostFxrRpmPackageVersion)</HostFxrRpmPackageName>
      <HostFxrRpmPackageName>$(HostFxrRpmPackageName.ToLower())</HostFxrRpmPackageName>
      <HostRpmPackageName>dotnet-host</HostRpmPackageName>
      <AspNetCoreSharedFxRpmPackageName>aspnetcore-runtime-$(AspNetCoreMajorMinorVersion)</AspNetCoreSharedFxRpmPackageName>
      <AspNetCoreSharedFxRpmPackageName>$(AspNetCoreSharedFxRpmPackageName.ToLower())</AspNetCoreSharedFxRpmPackageName>
      <AspNetCoreSharedFxRpmPackageFileName>aspnetcore-runtime-$(AspNetCoreVersion)</AspNetCoreSharedFxRpmPackageFileName>
      <AspNetCoreSharedFxRpmPackageFileName>$(AspNetCoreSharedFxRpmPackageFileName.ToLower())</AspNetCoreSharedFxRpmPackageFileName>
      <AspNetCoreSharedFxTargetingPackRpmPackageName>aspnetcore-targeting-pack-$(AspNetCoreMajorMinorVersion)</AspNetCoreSharedFxTargetingPackRpmPackageName>
      <AspNetCoreSharedFxTargetingPackRpmPackageName>$(AspNetCoreSharedFxTargetingPackRpmPackageName.ToLower())</AspNetCoreSharedFxTargetingPackRpmPackageName>
      <AspNetCoreSharedFxTargetingPackRpmPackageFileName>aspnetcore-targeting-pack-$(AspNetCoreVersion)</AspNetCoreSharedFxTargetingPackRpmPackageFileName>
      <AspNetCoreSharedFxTargetingPackRpmPackageFileName>$(AspNetCoreSharedFxTargetingPackRpmPackageFileName.ToLower())</AspNetCoreSharedFxTargetingPackRpmPackageFileName>
      <AfterInstallHostScriptTemplateFile>$(ScriptsDir)/$(AfterInstallHostScriptName)</AfterInstallHostScriptTemplateFile>
      <AfterInstallHostScriptDestinationFile>$(RpmLayoutScripts)/$(AfterInstallHostScriptName)</AfterInstallHostScriptDestinationFile>
    </PropertyGroup>
    
    <PropertyGroup>
      <DownloadedNetCoreAppTargetingPackInstallerFile>$(DownloadsFolder)$(DownloadedNetCoreAppTargetingPackInstallerFileName)</DownloadedNetCoreAppTargetingPackInstallerFile>
      <DownloadedAspNetTargetingPackInstallerFile>$(DownloadsFolder)$(DownloadedAspNetTargetingPackInstallerFileName)</DownloadedAspNetTargetingPackInstallerFile>
      <DownloadedRuntimeDepsInstallerFile>$(DownloadsFolder)$(DownloadedRuntimeDepsInstallerFileName)</DownloadedRuntimeDepsInstallerFile>
      <DownloadedSharedHostInstallerFile>$(DownloadsFolder)$(DownloadedSharedHostInstallerFileName)</DownloadedSharedHostInstallerFile>
      <DownloadedHostFxrInstallerFile>$(DownloadsFolder)$(DownloadedHostFxrInstallerFileName)</DownloadedHostFxrInstallerFile>
      <DownloadedSharedFrameworkInstallerFile>$(DownloadsFolder)$(DownloadedSharedFrameworkInstallerFileName)</DownloadedSharedFrameworkInstallerFile>
      <DownloadedAspNetCoreSharedFxInstallerFile>$(DownloadsFolder)$(DownloadedAspNetCoreSharedFxInstallerFileName)</DownloadedAspNetCoreSharedFxInstallerFile>
    </PropertyGroup>
    
    <PropertyGroup>
      <EndToEndTestProject>$(RepoRoot)/test/EndToEnd/EndToEnd.csproj</EndToEndTestProject>
    </PropertyGroup>
  </Target>

  <Target Name="TestFPMTool">

    <!-- run FPM  -->
    <!-- NB: IgnoreExitCode prevents Exec from failing, but does not prevent us from retrieving the exit code. -->
    <Exec Command="fpm --help > /dev/null 2>&amp;1" IgnoreExitCode="True">
      <Output TaskParameter="ExitCode" PropertyName="FPMExitCode"/>
    </Exec>

    <!-- Check if it returned 0 -->
    <PropertyGroup>
      <FPMPresent>false</FPMPresent>
      <FPMPresent Condition=" '$(FPMExitCode)' == '0' ">True</FPMPresent>
    </PropertyGroup>

    <!-- Workaround for Jenkins machines that don't have the necessary packages https://github.com/dotnet/core-setup/issues/2260 -->
    <Message Condition=" '$(FPMPresent)' != 'True' "
             Text="FPM tool Not found, RPM packages will not be built."
             Importance="High"/>
  </Target>

  <Target Name="TestSdkRpm"
          Condition="  '$(CLIBUILD_SKIP_TESTS)' != 'true' and '$(IsRPMBasedDistro)' == 'True' and '$(FPMPresent)' == 'True' "
          Inputs="$(DownloadedNetCoreAppTargetingPackInstallerFile);
                  $(DownloadedAspNetTargetingPackInstallerFile);
                  $(DownloadedRuntimeDepsInstallerFile);
                  $(DownloadedSharedHostInstallerFile);
                  $(DownloadedHostFxrInstallerFile);
                  $(DownloadedSharedFrameworkInstallerFile);
                  $(DownloadedAspNetCoreSharedFxInstallerFile);
                  $(SdkRPMInstallerFile);
                  $(RpmTestResultsXmlFile);"
          Outputs="$(RpmTestResultsXmlFile)" >

    <!-- Install Dependencies and SDK Packages -->
    <Exec Command="sudo rpm -iv $(DownloadedNetCoreAppTargetingPackInstallerFile)" />
    <Exec Command="sudo rpm -iv $(DownloadedAspNetTargetingPackInstallerFile)" />
    <Exec Command="sudo rpm -iv $(DownloadedRuntimeDepsInstallerFile)" />
    <Exec Command="sudo rpm -iv $(DownloadedSharedHostInstallerFile)" />
    <Exec Command="sudo rpm -iv $(DownloadedHostFxrInstallerFile)" />
    <Exec Command="sudo rpm -iv $(DownloadedSharedFrameworkInstallerFile)" />
    <!-- Ignore dependencies, which may have an incoherent dependency on dotnet-runtime -->
    <Exec Command="sudo rpm -iv --nodeps $(DownloadedAspNetCoreSharedFxInstallerFile)" />

    <Exec Command="sudo rpm -iv $(SdkRPMInstallerFile)" />

    <!-- Clean up Packages -->
    <Exec Command="sudo rpm -ev --nodeps $(SdkRpmPackageName)" />
    <Exec Command="sudo rpm -ev --nodeps $(AspNetCoreSharedFxRpmPackageFileName)" />
    <Exec Command="sudo rpm -ev --nodeps $(SharedFxRpmPackageFileName)" />
    <Exec Command="sudo rpm -ev --nodeps $(HostFxrRpmPackageName)" />
    <Exec Command="sudo rpm -ev --nodeps $(HostRpmPackageName)" />
    <Exec Command="sudo rpm -ev --nodeps $(RuntimeDepsPackageFileName)" />
    <Exec Command="sudo rpm -ev --nodeps $(SharedFxTargetingPackDebianPackageName)" />
    <Exec Command="sudo rpm -ev --nodeps $(AspNetCoreSharedFxTargetingPackDebianPackageName)" />
  </Target>
</Project>
