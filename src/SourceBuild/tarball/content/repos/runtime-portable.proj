<Project>
  <Import Project="runtime.common.props"/>

  <!-- Repository References -->
  <ItemGroup>
      <RepositoryReference Include="arcade" />
      <RepositoryReference Include="linker" />
      <RepositoryReference Include="source-build" />
      <!--TODO: Enable with https://github.com/dotnet/source-build/issues/2272
      <RepositoryReference Include="roslyn" /> -->
  </ItemGroup>

  <!-- Additional Targets -->
  <Target Name="CleanupRepoForNonPortableBuild" AfterTargets="RemoveBuiltPackagesFromCache">
    <!-- Make a copy of the portable build logs & project.assets.json files-->
    <PropertyGroup>
      <PortableLogDir>$(ProjectDirectory)artifacts/portableLog</PortableLogDir>
      <PortableObjDir>$(ProjectDirectory)artifacts/portableObj</PortableObjDir>
    </PropertyGroup>
    <ItemGroup>
      <LogFilesToCopy Include="$(ProjectDirectory)artifacts/log/**/*" />
      <ObjFilesToCopy Include="$(ProjectDirectory)artifacts/obj/**/project.assets.json" />
    </ItemGroup>
    <MakeDir Directories="$(PortableLogDir)" Condition="Exists('$(ProjectDirectory)artifacts')"/>
    <MakeDir Directories="$(PortableObjDir)" Condition="Exists('$(ProjectDirectory)artifacts')"/>
    <Copy SourceFiles="@(LogFilesToCopy)" DestinationFolder="$(PortableLogDir)/%(RecursiveDir)" Condition="Exists('$(PortableLogDir)')" />
    <Copy SourceFiles="@(ObjFilesToCopy)" DestinationFolder="$(PortableObjDir)/%(RecursiveDir)" Condition="Exists('$(PortableObjDir)')" />

    <!-- Cleanup everything else -->
    <ItemGroup>
      <DirsToDelete Include="$([System.IO.Directory]::GetDirectories(&quot;$(ProjectDirectory)artifacts/&quot;))" Condition="Exists('$(ProjectDirectory)artifacts')" />
      <DirsToDelete Include="$(ProjectDirectory)bin" Condition="Exists('$(ProjectDirectory)bin')" />
      <DirsToDelete Remove="$(PortableLogDir)" />
      <DirsToDelete Remove="$(PortableObjDir)" />
    </ItemGroup>

    <RemoveDir Directories="@(DirsToDelete)" />
  </Target>

  <Import Project="runtime.common.targets" />
</Project>
